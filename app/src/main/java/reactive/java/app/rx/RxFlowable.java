/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package reactive.java.app.rx;

import java.util.Scanner;

import static java.lang.Thread.sleep;

import io.reactivex.rxjava3.core.Flowable;
import io.reactivex.rxjava3.core.Observable;
import io.reactivex.rxjava3.schedulers.Schedulers;
import reactive.java.app.model.Item;

public class RxFlowable {
    public static void main(String[] args) {

        //  synchronousObservableExample();
        System.out.println("Start");
        //asyncObservableExample();
        asyncFlowableExample();
      //  System.out.println(Thread.currentThread().getName());
        new Scanner(System.in).nextLine();
    }
//
//    private static void synchronousObservableExample() {
//        Observable
//                .range(1, 1000000)
//                .map(Item::new)
//                .subscribe(item -> {
//                    sleep(1000);
//                    System.out.println("Received my item: " + item.getId() + ":" + Thread.currentThread().getName() + "\n");
//                });
//    }
//
    private static void asyncObservableExample() {
        Observable
                .range(1, 100)
                .map(Item::new)
                .observeOn(Schedulers.io())
                .subscribe(item -> {
                    sleep(20);
                    System.out.println("Received my item: " + item.getId() + ":" + Thread.currentThread().getName() + "\n");
                });
//        try {
//            sleep(Long.MAX_VALUE);
//        } catch (InterruptedException e) {
//            e.printStackTrace();
//        }
    }
//    // avoid memory exception because Flowable may work with portion of produced items
    private static void asyncFlowableExample(){
        Flowable
                .range(1, 100)
                .map(Item::new)
                .observeOn(Schedulers.io())
                .subscribe(item -> {
                    sleep(20);
                    System.out.println("Received my item: " + item.getId() + ":" + Thread.currentThread().getName() + "\n");
                });
//        try {
//            sleep(Long.MAX_VALUE);
//        } catch (InterruptedException e) {
//            e.printStackTrace();
//        }
    }

}
