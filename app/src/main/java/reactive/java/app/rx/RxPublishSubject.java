/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package reactive.java.app.rx;

import java.util.Scanner;
import java.util.concurrent.TimeUnit;

import static java.lang.Thread.sleep;

import io.reactivex.rxjava3.core.Observable;
import io.reactivex.rxjava3.core.Scheduler;
import io.reactivex.rxjava3.schedulers.Schedulers;
import io.reactivex.rxjava3.subjects.PublishSubject;
import io.reactivex.rxjava3.subjects.Subject;

public class RxPublishSubject {
    public static void main(String[] args) throws InterruptedException {

        System.out.println(Thread.currentThread().getName());
        Observable<Long> source1 = Observable
                .interval(1, TimeUnit.SECONDS);
        Observable<Long> source2 = Observable
                .interval(1, TimeUnit.SECONDS).observeOn(Schedulers.io());

        Subject<Long> subject = PublishSubject.create();

        subject.subscribe(item -> System.out.println("Received Item:" + item + ":" + Thread.currentThread().getName()));

        source1.subscribe(subject);

        source2.subscribe(subject);

//        try {
//            sleep(100000);
//        } catch (InterruptedException ex) {
//            ex.printStackTrace();
//        }

        new Scanner(System.in).nextLine();

    }


}
